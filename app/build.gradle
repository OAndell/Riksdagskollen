import java.util.regex.Matcher
import java.util.regex.Pattern

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }

    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

if(getCurrentFlavor() == "play"){
    apply plugin: 'com.google.firebase.crashlytics'
}


android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId "se.oandell.riksdagen"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 41
        multiDexEnabled true

        versionName "2.15.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }


    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }

    buildTypes {
        debug {
            manifestPlaceholders = [enableCrashReporting:"false"]
        }
        release {
            manifestPlaceholders = [enableCrashReporting:"true"]
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions 'version'
    productFlavors {
        play {
            // Add API key to project from local gradle.properties if exists
            // If not, add variable to be able to compile
            dimension 'version'
            if (project.hasProperty('TWITTER_API_KEY')){
                buildConfigField 'String', "TwitterApiKey", TWITTER_API_KEY
            } else {
                buildConfigField('String', 'TwitterApiKey', '"Dummy key"')
            }
        }
        fdroid {
            // Twitter not used in Fdroid version but variable is needed to compile
            buildConfigField('String', 'TwitterApiKey', '"Dummy key"')
            dimension 'version'
        }
    }
    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    useLibrary 'android.test.mock'
}


repositories {
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://maven.fabric.io/public'
    }
    mavenCentral()
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'

    def multidex_version = "2.0.1"

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'tools.fastlane:screengrab:2.0.0'

    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'androidx.core:core:1.2.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
    implementation "androidx.multidex:multidex:$multidex_version"
    implementation 'com.google.android.exoplayer:exoplayer:2.11.0'


    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    //playImplementation "com.google.android.gms:play-services-safetynet:16.0.0"
    playImplementation 'com.google.firebase:firebase-analytics:17.5.0'
    playImplementation 'com.google.firebase:firebase-crashlytics:17.2.1'

    implementation 'com.android.volley:volley:1.1.0'
    implementation 'org.jsoup:jsoup:1.11.2'
    implementation "io.reactivex.rxjava3:rxjava:3.0.11"
    implementation 'com.google.android:flexbox:1.0.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    implementation 'com.github.franmontiel:AttributionPresenter:1.0'
    implementation 'com.github.sevar83:indeterminate-checkbox:1.0.5@aar'
    implementation 'com.evernote:android-job:1.4.2'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.github.smart-fun:XmlToJson:1.4.4'
    implementation 'com.reddit:indicator-fast-scroll:1.2.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}


def getCurrentFlavor() {
    Gradle gradle = getGradle()
    String  tskReqStr = gradle.getStartParameter().getTaskRequests().toString()

    Pattern pattern;

    if( tskReqStr.contains( "assemble" ) )
        pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
    else
        pattern = Pattern.compile("generate(\\w+)(Release|Debug)")

    Matcher matcher = pattern.matcher( tskReqStr )

    if( matcher.find() )
        return matcher.group(1).toLowerCase()
    else
    {
        println "NO MATCH FOUND"
        return "";
    }
}


apply plugin: 'com.google.gms.google-services'
